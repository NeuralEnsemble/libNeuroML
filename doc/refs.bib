@Article{Vella2014,
  author       = {Vella, Michael and Cannon, Robert C. and Crook, Sharon and Davison, Andrew P. and Ganapathy, Gautham and Robinson, Hugh P. C. and Silver, R. Angus and Gleeson, Padraig},
  title        = {libNeuroML and PyLEMS: using Python to combine procedural and declarative modeling approaches in computational neuroscience.},
  doi          = {10.3389/fninf.2014.00038},
  issn         = {1662-5196},
  pages        = {38},
  volume       = {8},
  abstract     = {NeuroML is an XML-based model description language, which provides a powerful common data format for defining and exchanging models of neurons and neuronal networks. In the latest version of NeuroML, the structure and behavior of ion channel, synapse, cell, and network model descriptions are based on underlying definitions provided in LEMS, a domain-independent language for expressing hierarchical mathematical models of physical entities. While declarative approaches for describing models have led to greater exchange of model elements among software tools in computational neuroscience, a frequent criticism of XML-based languages is that they are difficult to work with directly. Here we describe two Application Programming Interfaces (APIs) written in Python (http://www.python.org), which simplify the process of developing and modifying models expressed in NeuroML and LEMS. The libNeuroML API provides a Python object model with a direct mapping to all NeuroML concepts defined by the NeuroML Schema, which facilitates reading and writing the XML equivalents. In addition, it offers a memory-efficient, array-based internal representation, which is useful for handling large-scale connectomics data. The libNeuroML API also includes support for performing common operations that are required when working with NeuroML documents. Access to the LEMS data model is provided by the PyLEMS API, which provides a Python implementation of the LEMS language, including the ability to simulate most models expressed in LEMS. Together, libNeuroML and PyLEMS provide a comprehensive solution for interacting with NeuroML models in a Python environment.},
  country      = {Switzerland},
  issn-linking = {1662-5196},
  journal      = {Frontiers in neuroinformatics},
  keywords     = {API; LEMS; NeuroML; Python; SWC; model specification; modeling; standardization},
  nlm-id       = {101477957},
  owner        = {NLM},
  pmc          = {PMC4005938},
  pmid         = {24795618},
  pubmodel     = {Electronic-eCollection},
  pubstatus    = {epublish},
  revised      = {2018-11-13},
  timestamp    = {2019-02-20},
  year         = {2014},
}

